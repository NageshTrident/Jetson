#!/bin/sh
# 11-Apr-2023
#

### BEGIN INIT INFO
# Provides: PIXCI-TTY
# Required-Start: PIXCI
# Required-Stop: PIXCI
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: EPIX(R) PIXCI(R) tty driver
# Description: TTY Driver for EPIX(R) PIXCI(R) frame grabbers
### END INIT INFO

if [ `id -u` -ne 0 ]; then
    echo "$0 must be run as root"
    exit 1
fi

ARCH=$(uname -m | sed -e s/i.86/i386/)
UNAMER=$(uname -r)
MAJVERS=$(uname -r | sed -e s/-/./ | cut -f1-2 -d.)


PIXCI_DIR0=/lib/modules/$UNAMER/extra
PIXCI_DIR1=/lib/modules/$UNAMER/kernel/drivers/misc
PIXCI_DIR2=/usr/sbin
PIXCI_FILE=pixcitty.ko
PIXCI_MODULE=pixcitty
PIXCI_RESOURCE=ttyPIXCI

PIXCI_DIR=$PIXCI_DIR0
if [ ! -d $PIXCI_DIR ]; then
    PIXCI_DIR=$PIXCI_DIR1
fi
if [ ! -d $PIXCI_DIR ]; then
    PIXCI_DIR=$PIXCI_DIR2
fi

# Exit if the driver is not installed
if [ ! -f $PIXCI_DIR/$PIXCI_FILE ]; then
    echo "$0 missing $PIXCI_DIR/$PIXCI_FILE"
    exit 1
fi

# Read configuration variable file if it is present?
# [ -r /etc/default/$PIXCI_MODULE ] && . /etc/default/$PIXCI_MODULE

# Load the VERBOSE setting and other rcS variables?
# . /lib/init/vars.sh

# Define LSB log_* functions or other variants?
# . /etc/rc.status
# . /lib/lsb/init-functions
# . /etc/rc.d/init.d/functions


start()
{

    PIXCI_PARM=""
    if  [ -n "$TTY_MAJOR" ]; then
        PIXCI_PARM="$PIXCI_PARM tty_major=$TTY_MAJOR"
    fi
    if  [ -n "$DEFAULT_BAUDRATE" ]; then
        PIXCI_PARM="$PIXCI_PARM default_baudrate=$DEFAULT_BAUDRATE"
    fi
    if [ ! -f $PIXCI_DIR/$PIXCI_FILE ]; then
        echo "$0 missing $PIXCI_DIR/$PIXCI_FILE"
        exit 1
    fi
    echo "insmod" "$PIXCI_DIR/$PIXCI_FILE" "$PIXCI_PARM"
    insmod $PIXCI_DIR/$PIXCI_FILE $PIXCI_PARM
}


stop()
{
    cat /proc/devices | grep $PIXCI_RESOURCE > /dev/null
    if [ $? -eq 0 ]; then
        echo "rmmod" "$PIXCI_MODULE"
        rmmod $PIXCI_MODULE
    fi
}

status()
{
    cat /proc/devices | grep $PIXCI_RESOURCE > /dev/null
    if [ $? -eq 0 ]; then
        echo "$2 driver is running!"
    else
        echo "$2 driver is not running!"
    fi
}


case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    force-reload|restart)
        stop
        start
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|force-reload|status}"
        exit 1
        ;;
esac
